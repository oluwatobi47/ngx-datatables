{"version":3,"sources":["../../../src/app/datatables/datatables-template/datatables-template.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,wBAAwB,EACxB,UAAU,EACV,KAAK,EAGL,gBAAgB,EACjB,MAAM,eAAA,CAAgB;AAEvB,MAEC;IAKD;;;;OAIG;IACH,YAFsB,UAAY,EAAoB,gBAAkB,EAA0B,wBAA0B;QAAtG,eAAA,GAAA,UAAA,CAAY;QAAoB,qBAAA,GAAA,gBAAA,CAAkB;QAA0B,6BAAA,GAAA,wBAAA,CAA0B;IAK1H,CAAC;IACH;;OAEG;IACH,QANG;IAOD,CAAC;IACH;;OAEG;IACH,IARG,aAAA;QASC,MAAM,CARC,IAAA,CAAK,UAAC,CAAU,aAAC,CAAa;IASvC,CAAC;IACH;;;;OAIG;IAXA,sBAAA,CAAA,IAAA,EAAA,OAAA;QAaC,IAAI,CAZC,gBAAC,CAAgB,KAAC,EAAK,CAAE;QAa9B,IAAI,gBAAgB,CAZhB,wBAAA,GAA2B,IAAA,CAAK,wBAAC,CAAwB,uBAAC,CAAuB,2BAAC,CAA2B,CAAC;QAalH,IAAI,gBAAgB,CAZhB,2BAAA,GAA4B,CAA+B,IAAC,CAAI,gBAAC,CAAgB,eAAC,CAAe,wBAAC,CAAwB,CAAC,QAAC,CAAA,CAAQ;QAaxI,2BAA2B,CAZC,OAAC,GAAS,OAAA,CAAQ;QAa9C,2BAA2B,CAZC,IAAC,GAAM,IAAA,CAAK;QAaxC,MAAM,CAZC,2BAAA,CAA4B;IAarC,CAAC;;AAXI,sCAAA,GAAoC;IAa3C,EAZE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAavB,QAAQ,EAZE,yBAAA;gBAaV,QAAQ,EAZE;;;;;;;;;;;;;;;;GA4BT;gBACD,MAAM,EAZE,CAAA;;GAcP,CAZC;aAaH,EAZC,EAAG;CAaJ,CAZC;AAaF;;GAEG;AAbF,0CAAA,GAAA,MAAA;IAeD,EAAC,IAAI,EAAE,UAAU,GAAG;IACpB,EAAC,IAAI,EAAE,gBAAgB,GAAG;IAC1B,EAAC,IAAI,EAAE,wBAAwB,GAAG;CACjC,CAAC;AAbK,0CAAA,GAAyD;IAehE,SAAS,EAdE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAe5B,MAAM,EAdE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAexB,CAdC;AAiBF;IACA,gBAAgB;IAChB,2BAA2B,CAAC,UAAU,CAAC;IACvC;;;OAGG;IACH,2BAA2B,CAAC,cAAc,CAAC;IAC3C,gBAAgB;IAChB,2BAA2B,CAAC,cAAc,CAAC;IAC3C,gBAAgB;IAChB,2BAA2B,CAAC,SAAS,CAAC,OAAO,CAAC;IAC9C,gBAAgB;IAChB,2BAA2B,CAAC,SAAS,CAAC,IAAI,CAAC;IAC3C,gBAAgB;IAChB,2BAA2B,CAAC,SAAS,CAAC,UAAU,CAAC;IACjD,gBAAgB;IAChB,2BAA2B,CAAC,SAAS,CAAC,gBAAgB,CAAC;IACvD,gBAAgB;IAChB,2BAA2B,CAAC,SAAS,CAAC,wBAAwB,CAAC;AAC/D,CAAC","file":"datatables-template.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  ComponentFactoryResolver,\n  ElementRef,\n  Input,\n  OnInit,\n  QueryList,\n  ViewContainerRef\n} from '@angular/core';\nimport {DatatablesColumnComponent} from '../datatables-column/datatables-column.component';\nexport class DatatablesTemplateComponent implements OnInit {\n\n  \n  columns: QueryList<DatatablesColumnComponent>;\n\n  \n  data: Object[];\n/**\n * @param {?} elementRef\n * @param {?} viewContainerRef\n * @param {?} componentFactoryResolver\n */\nconstructor(private elementRef: ElementRef,\nprivate viewContainerRef: ViewContainerRef,\nprivate componentFactoryResolver: ComponentFactoryResolver) {\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n  }\n/**\n * @return {?}\n */\nget nativeElement() {\n    return this.elementRef.nativeElement;\n  }\n/**\n * @param {?} data\n * @param {?=} columns\n * @return {?}\n */\nprivate buildTemplateComponent(data: Object[], columns?: QueryList<DatatablesColumnComponent>): DatatablesTemplateComponent {\n    this.viewContainerRef.clear();\n    let /** @type {?} */ rendererComponentFactory = this.componentFactoryResolver.resolveComponentFactory(DatatablesTemplateComponent);\n    let /** @type {?} */ datatablesTemplateComponent = /** @type {?} */(( <DatatablesTemplateComponent>this.viewContainerRef.createComponent(rendererComponentFactory).instance));\n    datatablesTemplateComponent.columns = columns;\n    datatablesTemplateComponent.data = data;\n    return datatablesTemplateComponent;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ngx-datatables-template',\n  template: `\n    <tr *ngFor=\"let rowData of data;let rowIndex = index\">\n\n      <td *ngFor=\"let column of columns;let colIndex=index\"\n          [ngClass]=\"{'row-selector':(column.bodyTemplate ? 1 : (column.rowSelector ? 2 : 0))==2}\">\n\n        <ng-container [ngSwitch]=\"column.bodyTemplate ? 1 : (column.rowSelector ? 2 : 0)\">\n              <span *ngSwitchCase=\"1\" id=\"_1_{{colIndex}}_{{rowIndex}}\">\n                  <ng-container [ngTemplateOutlet]=\"column.bodyTemplate?.templateRef\"\n                                [ngTemplateOutletContext]=\"{$implicit:{rowData:rowData,data:rowData,rowIndex:rowIndex,columnIndex:colIndex}}\"\n                                #bodyTemplate></ng-container>\n              </span>\n\n        </ng-container>\n      </td>\n    </tr>\n  `,\n  styles: [`\n\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ViewContainerRef, },\n{type: ComponentFactoryResolver, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'columns': [{ type: Input },],\n'data': [{ type: Input },],\n};\n}\n\nfunction DatatablesTemplateComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nDatatablesTemplateComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDatatablesTemplateComponent.ctorParameters;\n/** @type {?} */\nDatatablesTemplateComponent.propDecorators;\n/** @type {?} */\nDatatablesTemplateComponent.prototype.columns;\n/** @type {?} */\nDatatablesTemplateComponent.prototype.data;\n/** @type {?} */\nDatatablesTemplateComponent.prototype.elementRef;\n/** @type {?} */\nDatatablesTemplateComponent.prototype.viewContainerRef;\n/** @type {?} */\nDatatablesTemplateComponent.prototype.componentFactoryResolver;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}